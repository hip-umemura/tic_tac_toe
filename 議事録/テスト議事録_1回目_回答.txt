議事録　1回目_回答　Fチーム

参加者：
佐藤　細倉
小島　柴田
川崎　谷口

実施日時：
2024/05/31


内容：


(前回の指摘の修正点)


Q. 2.1関数名誤字
A. 修正する

→InputErrorRetryに修正しました。

main:
Q. main関数mainオンリーじゃないのに違和感
A. PlayerChangeをほかにファイルにするかは検討します。

→現状、そのままでお願いします。

Q. ターン数の使い方が気になる
A. 使う方向で行きます

→そのままにしてます。ResultJudgeで使用。

Q. PlayerChange関数の戻り値の明記がない、列挙なのか文字列なのか
A. 書きます

→　明記しました。

Q. 全体的に引数がchar型配列の表記、要素数の明記がない
A. 明記します

→char型配列[index][index]で記載

※main関数の説明がおかしかったのでフローチャートなど修正してます。

PlayerInput：
Q. PlayerInput列挙型に入力プレーヤー名に違和感
A. 修正します

→記載をPLAYER型定数にしました。

Q. 入力を受け付ける型がわからない、int型なら例外処理は
A. 書きます

→char型にしました。例外処理はInputErrorBoard関数に記載しました。

Q. PlayerInputの中ではchar型配列を使っていない、よくわからなかった
A. 検討します

→ PlayerInputで使用するようにしました。

BoardUpdate:
Q. BoardUpdateは戻り値なし？
A. はい

→なしです。

Q. 入力値の範囲がわからない
A. 明記します。

→入力範囲を明記しました。


Q. 引数の配列をポインタにするか or 戻り値にするか
A. どっちかにします

→ポインタにするように記載しました。

Retry:
Q. retryなのかretlyなのか
A. 修正します

→Retryに統一しました。

Q. retryの戻り値がわからない
A. 明記します。

→戻り値を明記しました。

Q. キーボードからの入力の型がわからない、例外処理は
A. 明記します

→char型にしました。処理範囲はInputErrorRetryで処理する。

Q. リトライ表示"、"か","か
A. どちらかに統一します

→","に修正しました。

Error:
Q. int型とchar型が一致することがないがどうなるのか
A. 入力に合わせて検討します

→入力値はchar型にしました。

　入力値(char型)と盤面(char型配列)の判定はPlyerInput関数でするようにしました。
　（入力した場所にすでに記号がはいっているかの判定）
　
　引数も入力値(char型)のみにしました。

Q. エラー文表示の後改行の有無
A. いれます

→エラー文はPlayerInput関数、Retry関数で表示するようにしました。
　改行後に空行をいれるようにしました。

BoardOutput
Q. char型配列の要素数の指定が欲しい
A. 明記します

→char型配列[index][index]にしました

Result:
Q. 想定されていないJUDGE型が入ってきた場合の処理
A. 列挙型を細分化して対応します

→元のJUDGE型をERROR_JUDGE、GAME_JUDGE、RETRY_JUDGEに分割

→ResultOutputでCONTINUEが返ってきたときの処理
　assert関数を使用すると記載した。

define
Q. defineのINDEXの詳細がない
A. 明記します

→2.2に記載しました。


以上の点について確認をもらった。



（新たな指摘内容）


Q. 画面表示の内容を文章で詳細を説明してほしい。
A. 明記します。

Q. 画面構成の各画面はどの処理で表示されるのかわかりにくい
A. わかるように明記します。

Q. 必要な変数の宣言や初期値を明記してほしい。
A. 明記します。

Q. マジックナンバーを使用せず、マクロで宣言してほしい。
A. 検討します。

Q. 関数単位で考えたとき、処理範囲外の数値が引数となった場合の処理が必要
A. 明記します。


修正期日：6/4(火) 午前中まで




